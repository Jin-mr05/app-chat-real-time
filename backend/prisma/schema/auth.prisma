model Session {
    id String @id @default(uuid()) @db.Uuid

    hashedRefreshToken String?
    userdeviceId       String   @db.Uuid
    userIp             String
    // relation - Fix typo: realtion -> relation
    userId             String   @unique @db.Uuid
    user               User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    createdAt          DateTime @default(now()) // Fix typo: createAt -> createdAt
    updatedAt          DateTime @updatedAt // Fix typo: updateAt -> updatedAt

    @@unique([userId, userdeviceId])
    @@map("sessions") // Thêm table mapping
}

model Code {
    id String @id @default(uuid()) @db.Uuid

    code String?
    type CodeType

    // relation - Fix typo: realtion -> relation
    userId String? @unique @db.Uuid
    user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    createdAt DateTime @default(now()) // Fix typo: createAt -> createdAt
    updatedAt DateTime @updatedAt // Fix typo: updateAt -> updatedAt

    @@map("codes") // Thêm table mapping
}

model UserDevice {
    id         String   @id @default(uuid()) @db.Uuid
    deviceName String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @unique

    //foreign keys
    userId    String @db.Uuid
    sessionId String @db.Uuid
    //realtions
    user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum CodeType {
    VERIFY
    RESET_PASSWORD
}
