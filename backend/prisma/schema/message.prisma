model Message {
    id Int @id @default(autoincrement())

    content String
    staus   StatusMessage @default(SENDING)

    createAt DateTime @default(now())
    updateAt DateTime @updatedAt

    // id room 
    roomId    String?
    addressId String?

    // realtion
    userId String @db.Uuid
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model ReadProgram {
    id              String @id @default(uuid()) @db.Uuid
    lastestMessgaId Int?   @default(0)

    userId String @unique @db.Uuid
    roomId String  @db.Uuid

    // realtion
    user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    room Room  @relation(fields: [roomId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@unique([userId, roomId])
}


enum StatusMessage {
    SENDING
    RECEIVED
    READ
}
