
model ReadReceipt {
    id String @id @default(uuid()) @db.Uuid

    readAt    DateTime @default(now())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // foreign keys
    messageId String @db.Uuid
    userId    String @db.Uuid

    // relations
    message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)
    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([messageId, userId]) // Ensure user can only read once per message
    @@index([messageId]) // Index for message lookup
    @@index([userId]) // Index for user lookup
    @@index([readAt]) // Index for sorting by read time
    @@map("read_receipts")
}

model MessageReaction {
    id String @id @default(uuid()) @db.Uuid

    emoji     String   @db.VarChar(10) // Emoji character or code
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // foreign keys
    messageId String @db.Uuid
    userId    String @db.Uuid

    // relations
    message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)
    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([messageId, userId, emoji]) // User can only react once with same emoji per message
    @@index([messageId]) // Index for message lookup
    @@index([userId]) // Index for user lookup
    @@index([messageId, emoji]) // Composite index for reaction queries
    @@map("message_reactions")
}

enum MessageTypes {
    TEXT
    IMAGE
    VIDEO
    AUDIO
    FILE
    VOICE
    LOCATION
}
